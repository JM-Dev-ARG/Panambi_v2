---

---

<section class="mx-auto grid w-full place-items-center">
  <div
    class="h-[200px] w-[90%] bg-[url(../img/bg_hero_dw2.avif)] bg-contain bg-center bg-no-repeat sm:h-[400px] lg:hidden"
  >
  </div>
  <div class="reflection-container hidden lg:inline-block">
    <!-- Cuadrícula invisible -->
    <div class="reflection-grid">
      <!-- JS generará 100 celdas -->
    </div>

    <!-- Contenido que rota -->
    <div class="reflection-content"></div>
  </div>
</section>

<style>
  .reflection-container {
    position: relative;
    place-items: center;
    width: 900px;
    /* height: 100%; */
    overflow: hidden;
    perspective: 1000px;
    transform-style: preserve-3d;
  }

  .reflection-content {
    height: 500px;
    width: 100%;
    background: url("../img/bg_hero_dw2.avif");
    background-size: 90% auto;
    background-repeat: no-repeat;
    background-position: center;
    transform: rotateX(0) rotateY(0);
    transition: transform 120ms linear;
    pointer-events: none;
    position: relative;
    overflow: hidden;
    filter: drop-shadow(4px 4px 4px rgba(0, 0, 0, 0.25));
  }

  .reflection-content::before {
    content: "";
    position: absolute;
    inset: -50%;
    width: 200%;
    height: 200%;
  }

  .reflection-grid {
    position: absolute;
    inset: 0;
    z-index: 10;
    display: grid;
    grid-template-columns: repeat(10, 1fr);
    grid-template-rows: repeat(10, 1fr);
  }

  .reflection-grid {
    width: 100%;
    height: 100%;
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const grid = document.querySelector(".reflection-grid") as HTMLElement;
    const reflectionContent = document.querySelector(
      ".reflection-content",
    ) as HTMLElement;

    // Genera 100 celdas invisibles
    for (let i = 0; i < 100; i++) {
      const cell = document.createElement("div");
      cell.classList.add("reflection-grid");
      grid.appendChild(cell);
    }

    // Maneja el hover dinámico
    document.querySelectorAll(".reflection-grid").forEach((cell, index) => {
      const row = Math.floor(index / 10) + 1;
      const col = (index % 10) + 1;

      cell.addEventListener("mouseenter", () => {
        const rotateX = row * -2 + 10; // antes -5 +25
        const rotateY = -10 + col * 2; // antes -25 +5
        reflectionContent.style.transform = `rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;
      });

      cell.addEventListener("mouseleave", () => {
        reflectionContent.style.transform = `rotateX(0deg) rotateY(0deg)`;
      });
    });
  });
</script>
