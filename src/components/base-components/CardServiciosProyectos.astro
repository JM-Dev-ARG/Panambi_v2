---
interface Props {
  img: string;
  titulo: string;
  descripcion: string;
  tags: Array<string>;
  bgColor: string;
}

const { img, titulo, descripcion, tags, bgColor } = Astro.props;
---

<div
  class=`flex flex-col-reverse lg:flex-row h-auto  lg:h-[700px] w-full items-start justify-center rounded-3xl p-3 ${bgColor}`
>
  <div
    class="flex h-full w-full items-center justify-start p-3 lg:h-full lg:w-1/2 lg:flex-col"
  >
    <div
      class="text-negro flex h-full flex-col items-start justify-between gap-4 text-pretty uppercase"
    >
      <div class="flex flex-col gap-2">
        <p
          class="font-titulo lg:leading-14 text-3xl font-black leading-8 tracking-wider sm:text-4xl lg:h-[130px] lg:text-5xl xl:text-6xl"
        >
          {titulo}
        </p>
        <p class="w-full text-sm sm:text-lg lg:w-[80%]">{descripcion}</p>
      </div>
      <div class="flex w-full gap-4 text-pretty uppercase lg:flex-col lg:gap-2">
        {
          tags.map((item) => {
            return (
              <p class="font-titulo text-violeta3-500 text-base font-bold leading-4 tracking-wider sm:text-lg sm:leading-6">
                {item}
              </p>
            );
          })
        }
      </div>
    </div>
    <div></div>
  </div><div
    class="group mx-auto grid h-1/2 w-full place-items-center overflow-hidden rounded-xl bg-neutral-100 lg:h-full lg:w-1/2"
  >
    <img
      src={img}
      alt="Contactanos"
      width="auto"
      height="auto"
      loading="lazy"
      class="drop-shadow-Panambi h-full w-full object-cover transition-all duration-500 ease-in-out group-hover:scale-105"
    />
  </div>
</div>
